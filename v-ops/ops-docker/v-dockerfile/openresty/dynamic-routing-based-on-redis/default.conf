upstream apache.org {
    server apache.org;
}

upstream nginx.org {
    server nginx.org;
}

server {
    listen 3000;

    location = /redis {
        internal;
        set_unescape_uri $key $arg_key;
        redis2_query get $key;
        redis2_pass 127.0.0.1:6379;
    }

    location / {
        set $target '';
        access_by_lua '
            local key = ngx.var.http_user_agent
            local res = ngx.location.capture(
                "/redis", { args = { key = key } }
            )

            print("key: ", key)

            if res.status ~= 200 then
                ngx.log(ngx.ERR, "redis server returned bad status: ",
                    res.status)
                ngx.exit(res.status)
            end

            if not res.body then
                ngx.log(ngx.ERR, "redis returned empty body")
                ngx.exit(500)
            end

            local parser = require "redis.parser"
            local server, typ = parser.parse_reply(res.body)
            if typ ~= parser.BULK_REPLY or not server then
                ngx.log(ngx.ERR, "bad redis response: ", res.body)
                ngx.exit(500)
            end

            print("server: ", server)

            ngx.var.target = server
        ';

        proxy_pass http://$target;
    }
}